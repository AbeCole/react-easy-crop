{"version":3,"sources":["webpack:///./src/components/CodeSandboxes/index.js","webpack:///./src/components/Demo/ImgDialog/index.js","webpack:///./src/components/Demo/cropImage.js","webpack:///./src/components/Demo/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Seo/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Demo/dog.jpeg","webpack:///./.cache/public-page-renderer-prod.js"],"names":["sandboxes","id","title","withStyles","theme","formControl","marginBottom","spacing","unit","minWidth","_ref","classes","_useState","useState","sandbox","setSandbox","react_default","a","createElement","FormControl_default","variant","className","InputLabel_default","htmlFor","Select_default","value","onChange","e","target","input","FilledInput_default","name","map","s","MenuItem_default","key","src","style","width","height","border","borderRadius","overflow","Transition","props","Slide_default","Object","assign","direction","withMobileDialog","breakpoint","appBar","position","flex","img","display","margin","maxWidth","maxHeight","onClose","fullScreen","Dialog_default","open","TransitionComponent","AppBar_default","Toolbar_default","IconButton_default","color","onClick","aria-label","Close_default","Typography_default","alt","createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","getCroppedImg","_x","_x2","_x3","_getCroppedImg","apply","this","arguments","_callee","imageSrc","pixelCrop","rotation","canvas","ctx","data","regenerator_default","wrap","_context","prev","next","sent","document","getContext","translate","rotate","Math","PI","drawImage","getImageData","putImageData","x","y","abrupt","toBlob","file","URL","createObjectURL","stop","_cropContainer","_controls","_sliderLabel","_slider","cropContainer","background","breakpoints","up","cropButton","flexShrink","marginLeft","controls","padding","flexDirection","alignItems","sliderContainer","sliderLabel","down","slider","crop","setCrop","_useState2","setRotation","_useState3","zoom","setZoom","_useState4","croppedAreaPixels","setCroppedAreaPixels","_useState5","croppedImage","setCroppedImage","onCropComplete","useCallback","croppedArea","showCroppedImage","asyncToGenerator_default","mark","dogImg","dist_default","aspect","onCropChange","onZoomChange","root","Slider_default","min","max","step","aria-labelledby","container","Button_default","Demo_ImgDialog","StaticQueryContext","React","createContext","StaticQuery","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","Header","siteTitle","wrapper","gatsby_link_default","to","link","href","forkImg","data-canonical-src","defaultProps","palette","primary","main","textAlign","textDecoration","top","right","Layout","gatsby_browser_entry_StaticQuery","Fragment","CssBaseline_default","components_Header","site","siteMetadata","paddingTop","component","_755544856","SEO","description","lang","meta","keywords","_2417117884","metaDescription","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","IndexPage","components_Layout","Seo","components_Demo","gutterBottom","components_CodeSandboxes","m","module","exports","require","default","__webpack_require__","p","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-index-js-e370985e52e2e8e20315.js","sourcesContent":["import React, { useState } from 'react'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FilledInput from '@material-ui/core/FilledInput'\nimport Select from '@material-ui/core/Select'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst sandboxes = [\n  { id: 'v69ly910ql', title: 'Basic with hooks' },\n  { id: 'q80jom5ql6', title: 'Basic with class' },\n  { id: 'q8q1mnr01w', title: 'With output of the cropped image' },\n  { id: 'y09komm059', title: 'With image selected by the user' },\n  { id: '53w20p2o3n', title: 'With round crop area and no grid' },\n]\n\nconst styles = theme => ({\n  formControl: {\n    marginBottom: theme.spacing.unit,\n    minWidth: 280,\n  },\n})\n\nconst CodeSandboxes = ({ classes }) => {\n  const [sandbox, setSandbox] = useState('v69ly910ql')\n  return (\n    <div>\n      <FormControl variant=\"filled\" className={classes.formControl}>\n        <InputLabel htmlFor=\"sandbox-example\">Example</InputLabel>\n        <Select\n          value={sandbox}\n          onChange={e => setSandbox(e.target.value)}\n          input={<FilledInput name=\"example\" id=\"sandbox-example\" />}\n        >\n          {sandboxes.map(s => (\n            <MenuItem key={s.id} value={s.id}>\n              {s.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <iframe\n        key={`iframe-${sandbox}`}\n        title={`Codesandbox example ${sandbox}`}\n        src={`https://codesandbox.io/embed/${sandbox}?autoresize=1&fontsize=14&hidenavigation=1`}\n        style={{\n          width: '100%',\n          height: 500,\n          border: 0,\n          borderRadius: 4,\n          overflow: 'hidden',\n          marginBottom: 24,\n        }}\n        sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(CodeSandboxes)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport withMobileDialog from '@material-ui/core/withMobileDialog'\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n  img: {\n    display: 'block',\n    margin: 'auto',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n})\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst ImgDialog = ({ img, onClose, fullScreen, classes }) => (\n  <Dialog fullScreen={fullScreen} open={!!img} onClose={onClose} TransitionComponent={Transition}>\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton color=\"inherit\" onClick={onClose} aria-label=\"Close\">\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\n          Cropped image\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <img src={img} alt=\"Cropped\" className={classes.img} />\n  </Dialog>\n)\n\nexport default withMobileDialog({ breakpoint: 'xs' })(withStyles(styles)(ImgDialog))\n","function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\nexport const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  // set width to double image size to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = image.width * 2\n  canvas.height = image.height * 2\n\n  // translate canvas context to a central location to allow rotating around the center.\n  ctx.translate(image.width, image.height)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-image.width, -image.height)\n\n  // draw rotated image and store data.\n  ctx.drawImage(image, image.width / 2, image.height / 2)\n  const data = ctx.getImageData(0, 0, image.width * 2, image.height * 2)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(data, 0 - image.width / 2 - pixelCrop.x, 0 - image.height / 2 - pixelCrop.y)\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React, { useState, useCallback } from 'react'\nimport Cropper from 'react-easy-crop'\nimport Slider from '@material-ui/lab/Slider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport ImgDialog from './ImgDialog'\nimport getCroppedImg from './cropImage'\nimport dogImg from './dog.jpeg'\n\nconst styles = theme => ({\n  cropContainer: {\n    position: 'relative',\n    width: '100%',\n    height: 200,\n    background: '#333',\n    [theme.breakpoints.up('sm')]: {\n      height: 400,\n    },\n  },\n  cropButton: {\n    flexShrink: 0,\n    marginLeft: 16,\n  },\n  controls: {\n    padding: 16,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    [theme.breakpoints.up('sm')]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n  },\n  sliderContainer: {\n    display: 'flex',\n    flex: '1',\n    alignItems: 'center',\n  },\n  sliderLabel: {\n    [theme.breakpoints.down('xs')]: {\n      minWidth: 65,\n    },\n  },\n  slider: {\n    padding: '22px 0px',\n    marginLeft: 16,\n    [theme.breakpoints.up('sm')]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      margin: '0 16px',\n    },\n  },\n})\n\nconst Demo = ({ classes }) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [rotation, setRotation] = useState(0)\n  const [zoom, setZoom] = useState(1)\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n  const [croppedImage, setCroppedImage] = useState(null)\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels)\n  }, [])\n\n  const showCroppedImage = useCallback(async () => {\n    const croppedImage = await getCroppedImg(dogImg, croppedAreaPixels, rotation)\n    setCroppedImage(croppedImage)\n  }, [croppedAreaPixels, rotation])\n\n  const onClose = useCallback(() => {\n    setCroppedImage(null)\n  }, [])\n\n  return (\n    <div>\n      <div className={classes.cropContainer}>\n        <Cropper\n          image={dogImg}\n          crop={crop}\n          rotation={rotation}\n          zoom={zoom}\n          aspect={4 / 3}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n      <div className={classes.controls}>\n        <div className={classes.sliderContainer}>\n          <Typography variant=\"overline\" classes={{ root: classes.sliderLabel }}>\n            Zoom\n          </Typography>\n          <Slider\n            value={zoom}\n            min={1}\n            max={3}\n            step={0.1}\n            aria-labelledby=\"Zoom\"\n            classes={{ container: classes.slider }}\n            onChange={(e, zoom) => setZoom(zoom)}\n          />\n        </div>\n        <div className={classes.sliderContainer}>\n          <Typography variant=\"overline\" classes={{ root: classes.sliderLabel }}>\n            Rotation\n          </Typography>\n          <Slider\n            value={rotation}\n            min={0}\n            max={360}\n            step={1}\n            aria-labelledby=\"Rotation\"\n            classes={{ container: classes.slider }}\n            onChange={(e, rotation) => setRotation(rotation)}\n          />\n        </div>\n        <Button\n          onClick={showCroppedImage}\n          variant=\"contained\"\n          color=\"primary\"\n          classes={{ root: classes.cropButton }}\n        >\n          Show Result\n        </Button>\n      </div>\n      <ImgDialog img={croppedImage} onClose={onClose} />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Demo)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.primary.main,\n    marginBottom: `1.45rem`,\n    position: 'relative',\n  },\n  wrapper: {\n    margin: `0 auto`,\n    maxWidth: 960,\n    padding: `1.45rem 1.0875rem`,\n    textAlign: 'center',\n  },\n  link: {\n    color: `white`,\n    textDecoration: `none`,\n  },\n  forkImg: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    border: 0,\n    width: 96,\n  },\n})\n\nconst Header = ({ siteTitle, classes }) => (\n  <header className={classes.root}>\n    <div className={classes.wrapper}>\n      <Link to=\"/\" className={classes.link}>\n        <Typography variant=\"display1\" color=\"inherit\">\n          {siteTitle}\n        </Typography>\n      </Link>\n      <a href=\"https://github.com/ricardo-ch/react-easy-crop\">\n        <img\n          className={classes.forkImg}\n          src=\"https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67\"\n          alt=\"Fork me on GitHub\"\n          data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\"\n        />\n      </a>\n    </div>\n  </header>\n)\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default withStyles(styles)(Header)\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Typography from '@material-ui/core/Typography'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport Header from '../Header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <CssBaseline />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>\n            <Typography component=\"div\">{children}</Typography>\n          </main>\n        </div>\n      </>\n    )}\n  />\n)\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={title}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nexport default SEO\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport CodeSandboxes from '../components/CodeSandboxes'\nimport Demo from '../components/Demo'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO\n      title=\"react-easy-crop\"\n      keywords={[`react-easy-crop`, `image cropper`, `crop image`, `react`]}\n    />\n    <Typography variant=\"subtitle1\">\n      A React component to crop images with easy interactions\n    </Typography>\n    <Typography variant=\"h4\">Demo</Typography>\n    <Demo />\n\n    <Typography variant=\"h4\">Features</Typography>\n    <ul>\n      <li>Supports drag and zoom interactions</li>\n      <li>Provides crop dimensions as pixels and percentages</li>\n      <li>Supports any images format (JPEG, PNG, even GIF) as url or base 64 string</li>\n      <li>Mobile friendly</li>\n    </ul>\n    <Typography variant=\"h4\" gutterBottom>\n      Codesandboxes\n    </Typography>\n    <CodeSandboxes />\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/dog-26b9422dccf83dc4e809f679c0f2b78e.jpeg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}